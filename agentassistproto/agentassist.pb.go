// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.2
// source: agentassist.proto

package agentassistproto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// TextContent represents text provided to or from an LLM.
// It must have Type set to "text".
type TextContent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          string                 `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"` // Must be "text"
	Text          string                 `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"` // The text content
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TextContent) Reset() {
	*x = TextContent{}
	mi := &file_agentassist_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TextContent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TextContent) ProtoMessage() {}

func (x *TextContent) ProtoReflect() protoreflect.Message {
	mi := &file_agentassist_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TextContent.ProtoReflect.Descriptor instead.
func (*TextContent) Descriptor() ([]byte, []int) {
	return file_agentassist_proto_rawDescGZIP(), []int{0}
}

func (x *TextContent) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *TextContent) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

// ImageContent represents an image provided to or from an LLM.
// It must have Type set to "image".
type ImageContent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          string                 `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`                         // Must be "image"
	Data          string                 `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`                         // Base64-encoded image data
	MimeType      string                 `protobuf:"bytes,3,opt,name=mime_type,json=mimeType,proto3" json:"mime_type,omitempty"` // MIME type of the image
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ImageContent) Reset() {
	*x = ImageContent{}
	mi := &file_agentassist_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ImageContent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImageContent) ProtoMessage() {}

func (x *ImageContent) ProtoReflect() protoreflect.Message {
	mi := &file_agentassist_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImageContent.ProtoReflect.Descriptor instead.
func (*ImageContent) Descriptor() ([]byte, []int) {
	return file_agentassist_proto_rawDescGZIP(), []int{1}
}

func (x *ImageContent) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ImageContent) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

func (x *ImageContent) GetMimeType() string {
	if x != nil {
		return x.MimeType
	}
	return ""
}

// AudioContent represents audio data provided to or from an LLM.
// It must have Type set to "audio".
type AudioContent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          string                 `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`                         // Must be "audio"
	Data          string                 `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`                         // Base64-encoded audio data
	MimeType      string                 `protobuf:"bytes,3,opt,name=mime_type,json=mimeType,proto3" json:"mime_type,omitempty"` // MIME type of the audio
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AudioContent) Reset() {
	*x = AudioContent{}
	mi := &file_agentassist_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AudioContent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AudioContent) ProtoMessage() {}

func (x *AudioContent) ProtoReflect() protoreflect.Message {
	mi := &file_agentassist_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AudioContent.ProtoReflect.Descriptor instead.
func (*AudioContent) Descriptor() ([]byte, []int) {
	return file_agentassist_proto_rawDescGZIP(), []int{2}
}

func (x *AudioContent) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *AudioContent) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

func (x *AudioContent) GetMimeType() string {
	if x != nil {
		return x.MimeType
	}
	return ""
}

// EmbeddedResource represents a resource embedded into a prompt or tool call
// result. It must have Type set to "embedded_resource".
type EmbeddedResource struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          string                 `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`                         // Must be "embedded_resource"
	Uri           string                 `protobuf:"bytes,2,opt,name=uri,proto3" json:"uri,omitempty"`                           // URI of the embedded resource
	MimeType      string                 `protobuf:"bytes,3,opt,name=mime_type,json=mimeType,proto3" json:"mime_type,omitempty"` // MIME type of the resource
	Data          []byte                 `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`                         // Optional: The actual resource data
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EmbeddedResource) Reset() {
	*x = EmbeddedResource{}
	mi := &file_agentassist_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EmbeddedResource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmbeddedResource) ProtoMessage() {}

func (x *EmbeddedResource) ProtoReflect() protoreflect.Message {
	mi := &file_agentassist_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmbeddedResource.ProtoReflect.Descriptor instead.
func (*EmbeddedResource) Descriptor() ([]byte, []int) {
	return file_agentassist_proto_rawDescGZIP(), []int{3}
}

func (x *EmbeddedResource) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *EmbeddedResource) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *EmbeddedResource) GetMimeType() string {
	if x != nil {
		return x.MimeType
	}
	return ""
}

func (x *EmbeddedResource) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type McpResultContent struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// content type
	// 1: text
	// 2: image
	// 3: audio
	// 4: embedded resource
	Type int32 `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`
	// text
	Text *TextContent `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
	// image
	Image *ImageContent `protobuf:"bytes,3,opt,name=image,proto3" json:"image,omitempty"`
	// audio
	Audio *AudioContent `protobuf:"bytes,4,opt,name=audio,proto3" json:"audio,omitempty"`
	// embedded resource
	EmbeddedResource *EmbeddedResource `protobuf:"bytes,5,opt,name=embedded_resource,json=embeddedResource,proto3" json:"embedded_resource,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *McpResultContent) Reset() {
	*x = McpResultContent{}
	mi := &file_agentassist_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *McpResultContent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*McpResultContent) ProtoMessage() {}

func (x *McpResultContent) ProtoReflect() protoreflect.Message {
	mi := &file_agentassist_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use McpResultContent.ProtoReflect.Descriptor instead.
func (*McpResultContent) Descriptor() ([]byte, []int) {
	return file_agentassist_proto_rawDescGZIP(), []int{4}
}

func (x *McpResultContent) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *McpResultContent) GetText() *TextContent {
	if x != nil {
		return x.Text
	}
	return nil
}

func (x *McpResultContent) GetImage() *ImageContent {
	if x != nil {
		return x.Image
	}
	return nil
}

func (x *McpResultContent) GetAudio() *AudioContent {
	if x != nil {
		return x.Audio
	}
	return nil
}

func (x *McpResultContent) GetEmbeddedResource() *EmbeddedResource {
	if x != nil {
		return x.EmbeddedResource
	}
	return nil
}

type MsgEmpty struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MsgEmpty) Reset() {
	*x = MsgEmpty{}
	mi := &file_agentassist_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MsgEmpty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgEmpty) ProtoMessage() {}

func (x *MsgEmpty) ProtoReflect() protoreflect.Message {
	mi := &file_agentassist_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgEmpty.ProtoReflect.Descriptor instead.
func (*MsgEmpty) Descriptor() ([]byte, []int) {
	return file_agentassist_proto_rawDescGZIP(), []int{5}
}

type McpAskQuestionRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// current project directory
	ProjectDirectory string `protobuf:"bytes,1,opt,name=ProjectDirectory,proto3" json:"ProjectDirectory,omitempty"`
	// ai agent's question
	Question string `protobuf:"bytes,2,opt,name=Question,proto3" json:"Question,omitempty"`
	// timeout in seconds, default is 600s
	Timeout       int32 `protobuf:"varint,3,opt,name=Timeout,proto3" json:"Timeout,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *McpAskQuestionRequest) Reset() {
	*x = McpAskQuestionRequest{}
	mi := &file_agentassist_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *McpAskQuestionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*McpAskQuestionRequest) ProtoMessage() {}

func (x *McpAskQuestionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_agentassist_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use McpAskQuestionRequest.ProtoReflect.Descriptor instead.
func (*McpAskQuestionRequest) Descriptor() ([]byte, []int) {
	return file_agentassist_proto_rawDescGZIP(), []int{6}
}

func (x *McpAskQuestionRequest) GetProjectDirectory() string {
	if x != nil {
		return x.ProjectDirectory
	}
	return ""
}

func (x *McpAskQuestionRequest) GetQuestion() string {
	if x != nil {
		return x.Question
	}
	return ""
}

func (x *McpAskQuestionRequest) GetTimeout() int32 {
	if x != nil {
		return x.Timeout
	}
	return 0
}

type AskQuestionRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// request id
	ID string `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	// user token
	UserToken string `protobuf:"bytes,2,opt,name=UserToken,proto3" json:"UserToken,omitempty"`
	// ai agent's question
	Request       *McpAskQuestionRequest `protobuf:"bytes,3,opt,name=Request,proto3" json:"Request,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AskQuestionRequest) Reset() {
	*x = AskQuestionRequest{}
	mi := &file_agentassist_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AskQuestionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AskQuestionRequest) ProtoMessage() {}

func (x *AskQuestionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_agentassist_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AskQuestionRequest.ProtoReflect.Descriptor instead.
func (*AskQuestionRequest) Descriptor() ([]byte, []int) {
	return file_agentassist_proto_rawDescGZIP(), []int{7}
}

func (x *AskQuestionRequest) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *AskQuestionRequest) GetUserToken() string {
	if x != nil {
		return x.UserToken
	}
	return ""
}

func (x *AskQuestionRequest) GetRequest() *McpAskQuestionRequest {
	if x != nil {
		return x.Request
	}
	return nil
}

type AskQuestionResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// request id
	ID            string              `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	IsError       bool                `protobuf:"varint,2,opt,name=IsError,proto3" json:"IsError,omitempty"`
	Meta          map[string]string   `protobuf:"bytes,3,rep,name=Meta,proto3" json:"Meta,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Contents      []*McpResultContent `protobuf:"bytes,4,rep,name=contents,proto3" json:"contents,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AskQuestionResponse) Reset() {
	*x = AskQuestionResponse{}
	mi := &file_agentassist_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AskQuestionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AskQuestionResponse) ProtoMessage() {}

func (x *AskQuestionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_agentassist_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AskQuestionResponse.ProtoReflect.Descriptor instead.
func (*AskQuestionResponse) Descriptor() ([]byte, []int) {
	return file_agentassist_proto_rawDescGZIP(), []int{8}
}

func (x *AskQuestionResponse) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *AskQuestionResponse) GetIsError() bool {
	if x != nil {
		return x.IsError
	}
	return false
}

func (x *AskQuestionResponse) GetMeta() map[string]string {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *AskQuestionResponse) GetContents() []*McpResultContent {
	if x != nil {
		return x.Contents
	}
	return nil
}

type McpTaskFinishRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// current project directory
	ProjectDirectory string `protobuf:"bytes,1,opt,name=ProjectDirectory,proto3" json:"ProjectDirectory,omitempty"`
	// ai agent's summary
	Summary string `protobuf:"bytes,2,opt,name=Summary,proto3" json:"Summary,omitempty"`
	// timeout in seconds, default is 600s
	Timeout       int32 `protobuf:"varint,3,opt,name=Timeout,proto3" json:"Timeout,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *McpTaskFinishRequest) Reset() {
	*x = McpTaskFinishRequest{}
	mi := &file_agentassist_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *McpTaskFinishRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*McpTaskFinishRequest) ProtoMessage() {}

func (x *McpTaskFinishRequest) ProtoReflect() protoreflect.Message {
	mi := &file_agentassist_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use McpTaskFinishRequest.ProtoReflect.Descriptor instead.
func (*McpTaskFinishRequest) Descriptor() ([]byte, []int) {
	return file_agentassist_proto_rawDescGZIP(), []int{9}
}

func (x *McpTaskFinishRequest) GetProjectDirectory() string {
	if x != nil {
		return x.ProjectDirectory
	}
	return ""
}

func (x *McpTaskFinishRequest) GetSummary() string {
	if x != nil {
		return x.Summary
	}
	return ""
}

func (x *McpTaskFinishRequest) GetTimeout() int32 {
	if x != nil {
		return x.Timeout
	}
	return 0
}

type TaskFinishRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// request id
	ID string `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	// user token
	UserToken string `protobuf:"bytes,2,opt,name=UserToken,proto3" json:"UserToken,omitempty"`
	// ai agent's summary
	Request       *McpTaskFinishRequest `protobuf:"bytes,3,opt,name=Request,proto3" json:"Request,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TaskFinishRequest) Reset() {
	*x = TaskFinishRequest{}
	mi := &file_agentassist_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskFinishRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskFinishRequest) ProtoMessage() {}

func (x *TaskFinishRequest) ProtoReflect() protoreflect.Message {
	mi := &file_agentassist_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskFinishRequest.ProtoReflect.Descriptor instead.
func (*TaskFinishRequest) Descriptor() ([]byte, []int) {
	return file_agentassist_proto_rawDescGZIP(), []int{10}
}

func (x *TaskFinishRequest) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *TaskFinishRequest) GetUserToken() string {
	if x != nil {
		return x.UserToken
	}
	return ""
}

func (x *TaskFinishRequest) GetRequest() *McpTaskFinishRequest {
	if x != nil {
		return x.Request
	}
	return nil
}

type TaskFinishResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// request id
	ID            string              `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	IsError       bool                `protobuf:"varint,2,opt,name=IsError,proto3" json:"IsError,omitempty"`
	Meta          map[string]string   `protobuf:"bytes,3,rep,name=Meta,proto3" json:"Meta,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Contents      []*McpResultContent `protobuf:"bytes,4,rep,name=contents,proto3" json:"contents,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TaskFinishResponse) Reset() {
	*x = TaskFinishResponse{}
	mi := &file_agentassist_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskFinishResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskFinishResponse) ProtoMessage() {}

func (x *TaskFinishResponse) ProtoReflect() protoreflect.Message {
	mi := &file_agentassist_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskFinishResponse.ProtoReflect.Descriptor instead.
func (*TaskFinishResponse) Descriptor() ([]byte, []int) {
	return file_agentassist_proto_rawDescGZIP(), []int{11}
}

func (x *TaskFinishResponse) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *TaskFinishResponse) GetIsError() bool {
	if x != nil {
		return x.IsError
	}
	return false
}

func (x *TaskFinishResponse) GetMeta() map[string]string {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *TaskFinishResponse) GetContents() []*McpResultContent {
	if x != nil {
		return x.Contents
	}
	return nil
}

type CheckMessageValidityRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// list of request IDs to check
	RequestIds    []string `protobuf:"bytes,1,rep,name=request_ids,json=requestIds,proto3" json:"request_ids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CheckMessageValidityRequest) Reset() {
	*x = CheckMessageValidityRequest{}
	mi := &file_agentassist_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckMessageValidityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckMessageValidityRequest) ProtoMessage() {}

func (x *CheckMessageValidityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_agentassist_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckMessageValidityRequest.ProtoReflect.Descriptor instead.
func (*CheckMessageValidityRequest) Descriptor() ([]byte, []int) {
	return file_agentassist_proto_rawDescGZIP(), []int{12}
}

func (x *CheckMessageValidityRequest) GetRequestIds() []string {
	if x != nil {
		return x.RequestIds
	}
	return nil
}

type CheckMessageValidityResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// map of request ID to validity status
	Validity      map[string]bool `protobuf:"bytes,1,rep,name=validity,proto3" json:"validity,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CheckMessageValidityResponse) Reset() {
	*x = CheckMessageValidityResponse{}
	mi := &file_agentassist_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckMessageValidityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckMessageValidityResponse) ProtoMessage() {}

func (x *CheckMessageValidityResponse) ProtoReflect() protoreflect.Message {
	mi := &file_agentassist_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckMessageValidityResponse.ProtoReflect.Descriptor instead.
func (*CheckMessageValidityResponse) Descriptor() ([]byte, []int) {
	return file_agentassist_proto_rawDescGZIP(), []int{13}
}

func (x *CheckMessageValidityResponse) GetValidity() map[string]bool {
	if x != nil {
		return x.Validity
	}
	return nil
}

// GetPendingMessagesRequest represents a request to get all pending messages for a user
type GetPendingMessagesRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// user token to filter messages
	UserToken     string `protobuf:"bytes,1,opt,name=user_token,json=userToken,proto3" json:"user_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPendingMessagesRequest) Reset() {
	*x = GetPendingMessagesRequest{}
	mi := &file_agentassist_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPendingMessagesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPendingMessagesRequest) ProtoMessage() {}

func (x *GetPendingMessagesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_agentassist_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPendingMessagesRequest.ProtoReflect.Descriptor instead.
func (*GetPendingMessagesRequest) Descriptor() ([]byte, []int) {
	return file_agentassist_proto_rawDescGZIP(), []int{14}
}

func (x *GetPendingMessagesRequest) GetUserToken() string {
	if x != nil {
		return x.UserToken
	}
	return ""
}

// PendingMessage represents a single pending message
type PendingMessage struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// message type: "AskQuestion" or "TaskFinish"
	MessageType string `protobuf:"bytes,1,opt,name=message_type,json=messageType,proto3" json:"message_type,omitempty"`
	// ask question request (if message_type is "AskQuestion")
	AskQuestionRequest *AskQuestionRequest `protobuf:"bytes,2,opt,name=ask_question_request,json=askQuestionRequest,proto3" json:"ask_question_request,omitempty"`
	// task finish request (if message_type is "TaskFinish")
	TaskFinishRequest *TaskFinishRequest `protobuf:"bytes,3,opt,name=task_finish_request,json=taskFinishRequest,proto3" json:"task_finish_request,omitempty"`
	// timestamp when the message was created
	CreatedAt int64 `protobuf:"varint,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// timeout in seconds
	Timeout       int32 `protobuf:"varint,5,opt,name=timeout,proto3" json:"timeout,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PendingMessage) Reset() {
	*x = PendingMessage{}
	mi := &file_agentassist_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PendingMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PendingMessage) ProtoMessage() {}

func (x *PendingMessage) ProtoReflect() protoreflect.Message {
	mi := &file_agentassist_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PendingMessage.ProtoReflect.Descriptor instead.
func (*PendingMessage) Descriptor() ([]byte, []int) {
	return file_agentassist_proto_rawDescGZIP(), []int{15}
}

func (x *PendingMessage) GetMessageType() string {
	if x != nil {
		return x.MessageType
	}
	return ""
}

func (x *PendingMessage) GetAskQuestionRequest() *AskQuestionRequest {
	if x != nil {
		return x.AskQuestionRequest
	}
	return nil
}

func (x *PendingMessage) GetTaskFinishRequest() *TaskFinishRequest {
	if x != nil {
		return x.TaskFinishRequest
	}
	return nil
}

func (x *PendingMessage) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *PendingMessage) GetTimeout() int32 {
	if x != nil {
		return x.Timeout
	}
	return 0
}

// GetPendingMessagesResponse represents the response containing all pending messages
type GetPendingMessagesResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// list of pending messages
	PendingMessages []*PendingMessage `protobuf:"bytes,1,rep,name=pending_messages,json=pendingMessages,proto3" json:"pending_messages,omitempty"`
	// total count of pending messages
	TotalCount    int32 `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPendingMessagesResponse) Reset() {
	*x = GetPendingMessagesResponse{}
	mi := &file_agentassist_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPendingMessagesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPendingMessagesResponse) ProtoMessage() {}

func (x *GetPendingMessagesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_agentassist_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPendingMessagesResponse.ProtoReflect.Descriptor instead.
func (*GetPendingMessagesResponse) Descriptor() ([]byte, []int) {
	return file_agentassist_proto_rawDescGZIP(), []int{16}
}

func (x *GetPendingMessagesResponse) GetPendingMessages() []*PendingMessage {
	if x != nil {
		return x.PendingMessages
	}
	return nil
}

func (x *GetPendingMessagesResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

type WebsocketMessage struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// WebsocketMessage cmd
	// AskQuestion: mcp ask_question
	// TaskFinish: mcp task_finish
	// AskQuestionReply: user ask_question reply
	// TaskFinishReply: user task_finish reply
	// UserLogin: user login, str param is user token
	// AskQuestionReplyNotification: notification of an AskQuestionReply
	// TaskFinishReplyNotification: notification of a TaskFinishReply
	// CheckMessageValidity: check if messages are still valid
	// GetPendingMessages: get all pending messages for a user
	Cmd string `protobuf:"bytes,1,opt,name=Cmd,proto3" json:"Cmd,omitempty"`
	// ask question
	AskQuestionRequest *AskQuestionRequest `protobuf:"bytes,2,opt,name=AskQuestionRequest,proto3" json:"AskQuestionRequest,omitempty"`
	// task finish
	TaskFinishRequest *TaskFinishRequest `protobuf:"bytes,3,opt,name=TaskFinishRequest,proto3" json:"TaskFinishRequest,omitempty"`
	// ask question reply
	AskQuestionResponse *AskQuestionResponse `protobuf:"bytes,4,opt,name=AskQuestionResponse,proto3" json:"AskQuestionResponse,omitempty"`
	// task finish reply
	TaskFinishResponse *TaskFinishResponse `protobuf:"bytes,5,opt,name=TaskFinishResponse,proto3" json:"TaskFinishResponse,omitempty"`
	// check message validity
	CheckMessageValidityRequest *CheckMessageValidityRequest `protobuf:"bytes,13,opt,name=CheckMessageValidityRequest,proto3" json:"CheckMessageValidityRequest,omitempty"`
	// check message validity response
	CheckMessageValidityResponse *CheckMessageValidityResponse `protobuf:"bytes,14,opt,name=CheckMessageValidityResponse,proto3" json:"CheckMessageValidityResponse,omitempty"`
	// get pending messages request
	GetPendingMessagesRequest *GetPendingMessagesRequest `protobuf:"bytes,15,opt,name=GetPendingMessagesRequest,proto3" json:"GetPendingMessagesRequest,omitempty"`
	// get pending messages response
	GetPendingMessagesResponse *GetPendingMessagesResponse `protobuf:"bytes,16,opt,name=GetPendingMessagesResponse,proto3" json:"GetPendingMessagesResponse,omitempty"`
	// str param
	StrParam      string `protobuf:"bytes,12,opt,name=StrParam,proto3" json:"StrParam,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WebsocketMessage) Reset() {
	*x = WebsocketMessage{}
	mi := &file_agentassist_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WebsocketMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebsocketMessage) ProtoMessage() {}

func (x *WebsocketMessage) ProtoReflect() protoreflect.Message {
	mi := &file_agentassist_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebsocketMessage.ProtoReflect.Descriptor instead.
func (*WebsocketMessage) Descriptor() ([]byte, []int) {
	return file_agentassist_proto_rawDescGZIP(), []int{17}
}

func (x *WebsocketMessage) GetCmd() string {
	if x != nil {
		return x.Cmd
	}
	return ""
}

func (x *WebsocketMessage) GetAskQuestionRequest() *AskQuestionRequest {
	if x != nil {
		return x.AskQuestionRequest
	}
	return nil
}

func (x *WebsocketMessage) GetTaskFinishRequest() *TaskFinishRequest {
	if x != nil {
		return x.TaskFinishRequest
	}
	return nil
}

func (x *WebsocketMessage) GetAskQuestionResponse() *AskQuestionResponse {
	if x != nil {
		return x.AskQuestionResponse
	}
	return nil
}

func (x *WebsocketMessage) GetTaskFinishResponse() *TaskFinishResponse {
	if x != nil {
		return x.TaskFinishResponse
	}
	return nil
}

func (x *WebsocketMessage) GetCheckMessageValidityRequest() *CheckMessageValidityRequest {
	if x != nil {
		return x.CheckMessageValidityRequest
	}
	return nil
}

func (x *WebsocketMessage) GetCheckMessageValidityResponse() *CheckMessageValidityResponse {
	if x != nil {
		return x.CheckMessageValidityResponse
	}
	return nil
}

func (x *WebsocketMessage) GetGetPendingMessagesRequest() *GetPendingMessagesRequest {
	if x != nil {
		return x.GetPendingMessagesRequest
	}
	return nil
}

func (x *WebsocketMessage) GetGetPendingMessagesResponse() *GetPendingMessagesResponse {
	if x != nil {
		return x.GetPendingMessagesResponse
	}
	return nil
}

func (x *WebsocketMessage) GetStrParam() string {
	if x != nil {
		return x.StrParam
	}
	return ""
}

var File_agentassist_proto protoreflect.FileDescriptor

const file_agentassist_proto_rawDesc = "" +
	"\n" +
	"\x11agentassist.proto\x12\x10agentassistproto\"5\n" +
	"\vTextContent\x12\x12\n" +
	"\x04type\x18\x01 \x01(\tR\x04type\x12\x12\n" +
	"\x04text\x18\x02 \x01(\tR\x04text\"S\n" +
	"\fImageContent\x12\x12\n" +
	"\x04type\x18\x01 \x01(\tR\x04type\x12\x12\n" +
	"\x04data\x18\x02 \x01(\tR\x04data\x12\x1b\n" +
	"\tmime_type\x18\x03 \x01(\tR\bmimeType\"S\n" +
	"\fAudioContent\x12\x12\n" +
	"\x04type\x18\x01 \x01(\tR\x04type\x12\x12\n" +
	"\x04data\x18\x02 \x01(\tR\x04data\x12\x1b\n" +
	"\tmime_type\x18\x03 \x01(\tR\bmimeType\"i\n" +
	"\x10EmbeddedResource\x12\x12\n" +
	"\x04type\x18\x01 \x01(\tR\x04type\x12\x10\n" +
	"\x03uri\x18\x02 \x01(\tR\x03uri\x12\x1b\n" +
	"\tmime_type\x18\x03 \x01(\tR\bmimeType\x12\x12\n" +
	"\x04data\x18\x04 \x01(\fR\x04data\"\x96\x02\n" +
	"\x10McpResultContent\x12\x12\n" +
	"\x04type\x18\x01 \x01(\x05R\x04type\x121\n" +
	"\x04text\x18\x02 \x01(\v2\x1d.agentassistproto.TextContentR\x04text\x124\n" +
	"\x05image\x18\x03 \x01(\v2\x1e.agentassistproto.ImageContentR\x05image\x124\n" +
	"\x05audio\x18\x04 \x01(\v2\x1e.agentassistproto.AudioContentR\x05audio\x12O\n" +
	"\x11embedded_resource\x18\x05 \x01(\v2\".agentassistproto.EmbeddedResourceR\x10embeddedResource\"\n" +
	"\n" +
	"\bMsgEmpty\"y\n" +
	"\x15McpAskQuestionRequest\x12*\n" +
	"\x10ProjectDirectory\x18\x01 \x01(\tR\x10ProjectDirectory\x12\x1a\n" +
	"\bQuestion\x18\x02 \x01(\tR\bQuestion\x12\x18\n" +
	"\aTimeout\x18\x03 \x01(\x05R\aTimeout\"\x85\x01\n" +
	"\x12AskQuestionRequest\x12\x0e\n" +
	"\x02ID\x18\x01 \x01(\tR\x02ID\x12\x1c\n" +
	"\tUserToken\x18\x02 \x01(\tR\tUserToken\x12A\n" +
	"\aRequest\x18\x03 \x01(\v2'.agentassistproto.McpAskQuestionRequestR\aRequest\"\xfd\x01\n" +
	"\x13AskQuestionResponse\x12\x0e\n" +
	"\x02ID\x18\x01 \x01(\tR\x02ID\x12\x18\n" +
	"\aIsError\x18\x02 \x01(\bR\aIsError\x12C\n" +
	"\x04Meta\x18\x03 \x03(\v2/.agentassistproto.AskQuestionResponse.MetaEntryR\x04Meta\x12>\n" +
	"\bcontents\x18\x04 \x03(\v2\".agentassistproto.McpResultContentR\bcontents\x1a7\n" +
	"\tMetaEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"v\n" +
	"\x14McpTaskFinishRequest\x12*\n" +
	"\x10ProjectDirectory\x18\x01 \x01(\tR\x10ProjectDirectory\x12\x18\n" +
	"\aSummary\x18\x02 \x01(\tR\aSummary\x12\x18\n" +
	"\aTimeout\x18\x03 \x01(\x05R\aTimeout\"\x83\x01\n" +
	"\x11TaskFinishRequest\x12\x0e\n" +
	"\x02ID\x18\x01 \x01(\tR\x02ID\x12\x1c\n" +
	"\tUserToken\x18\x02 \x01(\tR\tUserToken\x12@\n" +
	"\aRequest\x18\x03 \x01(\v2&.agentassistproto.McpTaskFinishRequestR\aRequest\"\xfb\x01\n" +
	"\x12TaskFinishResponse\x12\x0e\n" +
	"\x02ID\x18\x01 \x01(\tR\x02ID\x12\x18\n" +
	"\aIsError\x18\x02 \x01(\bR\aIsError\x12B\n" +
	"\x04Meta\x18\x03 \x03(\v2..agentassistproto.TaskFinishResponse.MetaEntryR\x04Meta\x12>\n" +
	"\bcontents\x18\x04 \x03(\v2\".agentassistproto.McpResultContentR\bcontents\x1a7\n" +
	"\tMetaEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\">\n" +
	"\x1bCheckMessageValidityRequest\x12\x1f\n" +
	"\vrequest_ids\x18\x01 \x03(\tR\n" +
	"requestIds\"\xb5\x01\n" +
	"\x1cCheckMessageValidityResponse\x12X\n" +
	"\bvalidity\x18\x01 \x03(\v2<.agentassistproto.CheckMessageValidityResponse.ValidityEntryR\bvalidity\x1a;\n" +
	"\rValidityEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\bR\x05value:\x028\x01\":\n" +
	"\x19GetPendingMessagesRequest\x12\x1d\n" +
	"\n" +
	"user_token\x18\x01 \x01(\tR\tuserToken\"\x99\x02\n" +
	"\x0ePendingMessage\x12!\n" +
	"\fmessage_type\x18\x01 \x01(\tR\vmessageType\x12V\n" +
	"\x14ask_question_request\x18\x02 \x01(\v2$.agentassistproto.AskQuestionRequestR\x12askQuestionRequest\x12S\n" +
	"\x13task_finish_request\x18\x03 \x01(\v2#.agentassistproto.TaskFinishRequestR\x11taskFinishRequest\x12\x1d\n" +
	"\n" +
	"created_at\x18\x04 \x01(\x03R\tcreatedAt\x12\x18\n" +
	"\atimeout\x18\x05 \x01(\x05R\atimeout\"\x8a\x01\n" +
	"\x1aGetPendingMessagesResponse\x12K\n" +
	"\x10pending_messages\x18\x01 \x03(\v2 .agentassistproto.PendingMessageR\x0fpendingMessages\x12\x1f\n" +
	"\vtotal_count\x18\x02 \x01(\x05R\n" +
	"totalCount\"\xd6\x06\n" +
	"\x10WebsocketMessage\x12\x10\n" +
	"\x03Cmd\x18\x01 \x01(\tR\x03Cmd\x12T\n" +
	"\x12AskQuestionRequest\x18\x02 \x01(\v2$.agentassistproto.AskQuestionRequestR\x12AskQuestionRequest\x12Q\n" +
	"\x11TaskFinishRequest\x18\x03 \x01(\v2#.agentassistproto.TaskFinishRequestR\x11TaskFinishRequest\x12W\n" +
	"\x13AskQuestionResponse\x18\x04 \x01(\v2%.agentassistproto.AskQuestionResponseR\x13AskQuestionResponse\x12T\n" +
	"\x12TaskFinishResponse\x18\x05 \x01(\v2$.agentassistproto.TaskFinishResponseR\x12TaskFinishResponse\x12o\n" +
	"\x1bCheckMessageValidityRequest\x18\r \x01(\v2-.agentassistproto.CheckMessageValidityRequestR\x1bCheckMessageValidityRequest\x12r\n" +
	"\x1cCheckMessageValidityResponse\x18\x0e \x01(\v2..agentassistproto.CheckMessageValidityResponseR\x1cCheckMessageValidityResponse\x12i\n" +
	"\x19GetPendingMessagesRequest\x18\x0f \x01(\v2+.agentassistproto.GetPendingMessagesRequestR\x19GetPendingMessagesRequest\x12l\n" +
	"\x1aGetPendingMessagesResponse\x18\x10 \x01(\v2,.agentassistproto.GetPendingMessagesResponseR\x1aGetPendingMessagesResponse\x12\x1a\n" +
	"\bStrParam\x18\f \x01(\tR\bStrParam2\xc5\x01\n" +
	"\x0eSrvAgentAssist\x12Z\n" +
	"\vAskQuestion\x12$.agentassistproto.AskQuestionRequest\x1a%.agentassistproto.AskQuestionResponse\x12W\n" +
	"\n" +
	"TaskFinish\x12#.agentassistproto.TaskFinishRequest\x1a$.agentassistproto.TaskFinishResponseB8Z6github.com/yangjuncode/agentassistant/agentassistprotob\x06proto3"

var (
	file_agentassist_proto_rawDescOnce sync.Once
	file_agentassist_proto_rawDescData []byte
)

func file_agentassist_proto_rawDescGZIP() []byte {
	file_agentassist_proto_rawDescOnce.Do(func() {
		file_agentassist_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_agentassist_proto_rawDesc), len(file_agentassist_proto_rawDesc)))
	})
	return file_agentassist_proto_rawDescData
}

var file_agentassist_proto_msgTypes = make([]protoimpl.MessageInfo, 21)
var file_agentassist_proto_goTypes = []any{
	(*TextContent)(nil),                  // 0: agentassistproto.TextContent
	(*ImageContent)(nil),                 // 1: agentassistproto.ImageContent
	(*AudioContent)(nil),                 // 2: agentassistproto.AudioContent
	(*EmbeddedResource)(nil),             // 3: agentassistproto.EmbeddedResource
	(*McpResultContent)(nil),             // 4: agentassistproto.McpResultContent
	(*MsgEmpty)(nil),                     // 5: agentassistproto.MsgEmpty
	(*McpAskQuestionRequest)(nil),        // 6: agentassistproto.McpAskQuestionRequest
	(*AskQuestionRequest)(nil),           // 7: agentassistproto.AskQuestionRequest
	(*AskQuestionResponse)(nil),          // 8: agentassistproto.AskQuestionResponse
	(*McpTaskFinishRequest)(nil),         // 9: agentassistproto.McpTaskFinishRequest
	(*TaskFinishRequest)(nil),            // 10: agentassistproto.TaskFinishRequest
	(*TaskFinishResponse)(nil),           // 11: agentassistproto.TaskFinishResponse
	(*CheckMessageValidityRequest)(nil),  // 12: agentassistproto.CheckMessageValidityRequest
	(*CheckMessageValidityResponse)(nil), // 13: agentassistproto.CheckMessageValidityResponse
	(*GetPendingMessagesRequest)(nil),    // 14: agentassistproto.GetPendingMessagesRequest
	(*PendingMessage)(nil),               // 15: agentassistproto.PendingMessage
	(*GetPendingMessagesResponse)(nil),   // 16: agentassistproto.GetPendingMessagesResponse
	(*WebsocketMessage)(nil),             // 17: agentassistproto.WebsocketMessage
	nil,                                  // 18: agentassistproto.AskQuestionResponse.MetaEntry
	nil,                                  // 19: agentassistproto.TaskFinishResponse.MetaEntry
	nil,                                  // 20: agentassistproto.CheckMessageValidityResponse.ValidityEntry
}
var file_agentassist_proto_depIdxs = []int32{
	0,  // 0: agentassistproto.McpResultContent.text:type_name -> agentassistproto.TextContent
	1,  // 1: agentassistproto.McpResultContent.image:type_name -> agentassistproto.ImageContent
	2,  // 2: agentassistproto.McpResultContent.audio:type_name -> agentassistproto.AudioContent
	3,  // 3: agentassistproto.McpResultContent.embedded_resource:type_name -> agentassistproto.EmbeddedResource
	6,  // 4: agentassistproto.AskQuestionRequest.Request:type_name -> agentassistproto.McpAskQuestionRequest
	18, // 5: agentassistproto.AskQuestionResponse.Meta:type_name -> agentassistproto.AskQuestionResponse.MetaEntry
	4,  // 6: agentassistproto.AskQuestionResponse.contents:type_name -> agentassistproto.McpResultContent
	9,  // 7: agentassistproto.TaskFinishRequest.Request:type_name -> agentassistproto.McpTaskFinishRequest
	19, // 8: agentassistproto.TaskFinishResponse.Meta:type_name -> agentassistproto.TaskFinishResponse.MetaEntry
	4,  // 9: agentassistproto.TaskFinishResponse.contents:type_name -> agentassistproto.McpResultContent
	20, // 10: agentassistproto.CheckMessageValidityResponse.validity:type_name -> agentassistproto.CheckMessageValidityResponse.ValidityEntry
	7,  // 11: agentassistproto.PendingMessage.ask_question_request:type_name -> agentassistproto.AskQuestionRequest
	10, // 12: agentassistproto.PendingMessage.task_finish_request:type_name -> agentassistproto.TaskFinishRequest
	15, // 13: agentassistproto.GetPendingMessagesResponse.pending_messages:type_name -> agentassistproto.PendingMessage
	7,  // 14: agentassistproto.WebsocketMessage.AskQuestionRequest:type_name -> agentassistproto.AskQuestionRequest
	10, // 15: agentassistproto.WebsocketMessage.TaskFinishRequest:type_name -> agentassistproto.TaskFinishRequest
	8,  // 16: agentassistproto.WebsocketMessage.AskQuestionResponse:type_name -> agentassistproto.AskQuestionResponse
	11, // 17: agentassistproto.WebsocketMessage.TaskFinishResponse:type_name -> agentassistproto.TaskFinishResponse
	12, // 18: agentassistproto.WebsocketMessage.CheckMessageValidityRequest:type_name -> agentassistproto.CheckMessageValidityRequest
	13, // 19: agentassistproto.WebsocketMessage.CheckMessageValidityResponse:type_name -> agentassistproto.CheckMessageValidityResponse
	14, // 20: agentassistproto.WebsocketMessage.GetPendingMessagesRequest:type_name -> agentassistproto.GetPendingMessagesRequest
	16, // 21: agentassistproto.WebsocketMessage.GetPendingMessagesResponse:type_name -> agentassistproto.GetPendingMessagesResponse
	7,  // 22: agentassistproto.SrvAgentAssist.AskQuestion:input_type -> agentassistproto.AskQuestionRequest
	10, // 23: agentassistproto.SrvAgentAssist.TaskFinish:input_type -> agentassistproto.TaskFinishRequest
	8,  // 24: agentassistproto.SrvAgentAssist.AskQuestion:output_type -> agentassistproto.AskQuestionResponse
	11, // 25: agentassistproto.SrvAgentAssist.TaskFinish:output_type -> agentassistproto.TaskFinishResponse
	24, // [24:26] is the sub-list for method output_type
	22, // [22:24] is the sub-list for method input_type
	22, // [22:22] is the sub-list for extension type_name
	22, // [22:22] is the sub-list for extension extendee
	0,  // [0:22] is the sub-list for field type_name
}

func init() { file_agentassist_proto_init() }
func file_agentassist_proto_init() {
	if File_agentassist_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_agentassist_proto_rawDesc), len(file_agentassist_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   21,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_agentassist_proto_goTypes,
		DependencyIndexes: file_agentassist_proto_depIdxs,
		MessageInfos:      file_agentassist_proto_msgTypes,
	}.Build()
	File_agentassist_proto = out.File
	file_agentassist_proto_goTypes = nil
	file_agentassist_proto_depIdxs = nil
}
