// @generated by protoc-gen-es v2.5.2 with parameter "target=ts"
// @generated from file agentassist.proto (package agentassistproto, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv2";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv2";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file agentassist.proto.
 */
export const file_agentassist: GenFile = /*@__PURE__*/
  fileDesc("ChFhZ2VudGFzc2lzdC5wcm90bxIQYWdlbnRhc3Npc3Rwcm90byIpCgtUZXh0Q29udGVudBIMCgR0eXBlGAEgASgJEgwKBHRleHQYAiABKAkiPQoMSW1hZ2VDb250ZW50EgwKBHR5cGUYASABKAkSDAoEZGF0YRgCIAEoCRIRCgltaW1lX3R5cGUYAyABKAkiPQoMQXVkaW9Db250ZW50EgwKBHR5cGUYASABKAkSDAoEZGF0YRgCIAEoCRIRCgltaW1lX3R5cGUYAyABKAkiTgoQRW1iZWRkZWRSZXNvdXJjZRIMCgR0eXBlGAEgASgJEgsKA3VyaRgCIAEoCRIRCgltaW1lX3R5cGUYAyABKAkSDAoEZGF0YRgEIAEoDCLqAQoQTWNwUmVzdWx0Q29udGVudBIMCgR0eXBlGAEgASgFEisKBHRleHQYAiABKAsyHS5hZ2VudGFzc2lzdHByb3RvLlRleHRDb250ZW50Ei0KBWltYWdlGAMgASgLMh4uYWdlbnRhc3Npc3Rwcm90by5JbWFnZUNvbnRlbnQSLQoFYXVkaW8YBCABKAsyHi5hZ2VudGFzc2lzdHByb3RvLkF1ZGlvQ29udGVudBI9ChFlbWJlZGRlZF9yZXNvdXJjZRgFIAEoCzIiLmFnZW50YXNzaXN0cHJvdG8uRW1iZWRkZWRSZXNvdXJjZSIKCghNc2dFbXB0eSJUChVNY3BBc2tRdWVzdGlvblJlcXVlc3QSGAoQUHJvamVjdERpcmVjdG9yeRgBIAEoCRIQCghRdWVzdGlvbhgCIAEoCRIPCgdUaW1lb3V0GAMgASgFIm0KEkFza1F1ZXN0aW9uUmVxdWVzdBIKCgJJRBgBIAEoCRIRCglVc2VyVG9rZW4YAiABKAkSOAoHUmVxdWVzdBgDIAEoCzInLmFnZW50YXNzaXN0cHJvdG8uTWNwQXNrUXVlc3Rpb25SZXF1ZXN0ItQBChNBc2tRdWVzdGlvblJlc3BvbnNlEgoKAklEGAEgASgJEg8KB0lzRXJyb3IYAiABKAgSPQoETWV0YRgDIAMoCzIvLmFnZW50YXNzaXN0cHJvdG8uQXNrUXVlc3Rpb25SZXNwb25zZS5NZXRhRW50cnkSNAoIY29udGVudHMYBCADKAsyIi5hZ2VudGFzc2lzdHByb3RvLk1jcFJlc3VsdENvbnRlbnQaKwoJTWV0YUVudHJ5EgsKA2tleRgBIAEoCRINCgV2YWx1ZRgCIAEoCToCOAEiUgoUTWNwVGFza0ZpbmlzaFJlcXVlc3QSGAoQUHJvamVjdERpcmVjdG9yeRgBIAEoCRIPCgdTdW1tYXJ5GAIgASgJEg8KB1RpbWVvdXQYAyABKAUiawoRVGFza0ZpbmlzaFJlcXVlc3QSCgoCSUQYASABKAkSEQoJVXNlclRva2VuGAIgASgJEjcKB1JlcXVlc3QYAyABKAsyJi5hZ2VudGFzc2lzdHByb3RvLk1jcFRhc2tGaW5pc2hSZXF1ZXN0ItIBChJUYXNrRmluaXNoUmVzcG9uc2USCgoCSUQYASABKAkSDwoHSXNFcnJvchgCIAEoCBI8CgRNZXRhGAMgAygLMi4uYWdlbnRhc3Npc3Rwcm90by5UYXNrRmluaXNoUmVzcG9uc2UuTWV0YUVudHJ5EjQKCGNvbnRlbnRzGAQgAygLMiIuYWdlbnRhc3Npc3Rwcm90by5NY3BSZXN1bHRDb250ZW50GisKCU1ldGFFbnRyeRILCgNrZXkYASABKAkSDQoFdmFsdWUYAiABKAk6AjgBIrkCChBXZWJzb2NrZXRNZXNzYWdlEgsKA0NtZBgBIAEoCRJAChJBc2tRdWVzdGlvblJlcXVlc3QYAiABKAsyJC5hZ2VudGFzc2lzdHByb3RvLkFza1F1ZXN0aW9uUmVxdWVzdBI+ChFUYXNrRmluaXNoUmVxdWVzdBgDIAEoCzIjLmFnZW50YXNzaXN0cHJvdG8uVGFza0ZpbmlzaFJlcXVlc3QSQgoTQXNrUXVlc3Rpb25SZXNwb25zZRgEIAEoCzIlLmFnZW50YXNzaXN0cHJvdG8uQXNrUXVlc3Rpb25SZXNwb25zZRJAChJUYXNrRmluaXNoUmVzcG9uc2UYBSABKAsyJC5hZ2VudGFzc2lzdHByb3RvLlRhc2tGaW5pc2hSZXNwb25zZRIQCghTdHJQYXJhbRgMIAEoCTLFAQoOU3J2QWdlbnRBc3Npc3QSWgoLQXNrUXVlc3Rpb24SJC5hZ2VudGFzc2lzdHByb3RvLkFza1F1ZXN0aW9uUmVxdWVzdBolLmFnZW50YXNzaXN0cHJvdG8uQXNrUXVlc3Rpb25SZXNwb25zZRJXCgpUYXNrRmluaXNoEiMuYWdlbnRhc3Npc3Rwcm90by5UYXNrRmluaXNoUmVxdWVzdBokLmFnZW50YXNzaXN0cHJvdG8uVGFza0ZpbmlzaFJlc3BvbnNlQjhaNmdpdGh1Yi5jb20veWFuZ2p1bmNvZGUvYWdlbnRhc3Npc3RhbnQvYWdlbnRhc3Npc3Rwcm90b2IGcHJvdG8z");

/**
 * TextContent represents text provided to or from an LLM.
 * It must have Type set to "text".
 *
 * @generated from message agentassistproto.TextContent
 */
export type TextContent = Message<"agentassistproto.TextContent"> & {
  /**
   * Must be "text"
   *
   * @generated from field: string type = 1;
   */
  type: string;

  /**
   * The text content
   *
   * @generated from field: string text = 2;
   */
  text: string;
};

/**
 * Describes the message agentassistproto.TextContent.
 * Use `create(TextContentSchema)` to create a new message.
 */
export const TextContentSchema: GenMessage<TextContent> = /*@__PURE__*/
  messageDesc(file_agentassist, 0);

/**
 * ImageContent represents an image provided to or from an LLM.
 * It must have Type set to "image".
 *
 * @generated from message agentassistproto.ImageContent
 */
export type ImageContent = Message<"agentassistproto.ImageContent"> & {
  /**
   * Must be "image"
   *
   * @generated from field: string type = 1;
   */
  type: string;

  /**
   * Base64-encoded image data
   *
   * @generated from field: string data = 2;
   */
  data: string;

  /**
   * MIME type of the image
   *
   * @generated from field: string mime_type = 3;
   */
  mimeType: string;
};

/**
 * Describes the message agentassistproto.ImageContent.
 * Use `create(ImageContentSchema)` to create a new message.
 */
export const ImageContentSchema: GenMessage<ImageContent> = /*@__PURE__*/
  messageDesc(file_agentassist, 1);

/**
 * AudioContent represents audio data provided to or from an LLM.
 * It must have Type set to "audio".
 *
 * @generated from message agentassistproto.AudioContent
 */
export type AudioContent = Message<"agentassistproto.AudioContent"> & {
  /**
   * Must be "audio"
   *
   * @generated from field: string type = 1;
   */
  type: string;

  /**
   * Base64-encoded audio data
   *
   * @generated from field: string data = 2;
   */
  data: string;

  /**
   * MIME type of the audio
   *
   * @generated from field: string mime_type = 3;
   */
  mimeType: string;
};

/**
 * Describes the message agentassistproto.AudioContent.
 * Use `create(AudioContentSchema)` to create a new message.
 */
export const AudioContentSchema: GenMessage<AudioContent> = /*@__PURE__*/
  messageDesc(file_agentassist, 2);

/**
 * EmbeddedResource represents a resource embedded into a prompt or tool call
 * result. It must have Type set to "embedded_resource".
 *
 * @generated from message agentassistproto.EmbeddedResource
 */
export type EmbeddedResource = Message<"agentassistproto.EmbeddedResource"> & {
  /**
   * Must be "embedded_resource"
   *
   * @generated from field: string type = 1;
   */
  type: string;

  /**
   * URI of the embedded resource
   *
   * @generated from field: string uri = 2;
   */
  uri: string;

  /**
   * MIME type of the resource
   *
   * @generated from field: string mime_type = 3;
   */
  mimeType: string;

  /**
   * Optional: The actual resource data
   *
   * @generated from field: bytes data = 4;
   */
  data: Uint8Array;
};

/**
 * Describes the message agentassistproto.EmbeddedResource.
 * Use `create(EmbeddedResourceSchema)` to create a new message.
 */
export const EmbeddedResourceSchema: GenMessage<EmbeddedResource> = /*@__PURE__*/
  messageDesc(file_agentassist, 3);

/**
 * @generated from message agentassistproto.McpResultContent
 */
export type McpResultContent = Message<"agentassistproto.McpResultContent"> & {
  /**
   * content type
   * 1: text
   * 2: image
   * 3: audio
   * 4: embedded resource
   *
   * @generated from field: int32 type = 1;
   */
  type: number;

  /**
   * text
   *
   * @generated from field: agentassistproto.TextContent text = 2;
   */
  text?: TextContent;

  /**
   * image
   *
   * @generated from field: agentassistproto.ImageContent image = 3;
   */
  image?: ImageContent;

  /**
   * audio
   *
   * @generated from field: agentassistproto.AudioContent audio = 4;
   */
  audio?: AudioContent;

  /**
   * embedded resource
   *
   * @generated from field: agentassistproto.EmbeddedResource embedded_resource = 5;
   */
  embeddedResource?: EmbeddedResource;
};

/**
 * Describes the message agentassistproto.McpResultContent.
 * Use `create(McpResultContentSchema)` to create a new message.
 */
export const McpResultContentSchema: GenMessage<McpResultContent> = /*@__PURE__*/
  messageDesc(file_agentassist, 4);

/**
 * @generated from message agentassistproto.MsgEmpty
 */
export type MsgEmpty = Message<"agentassistproto.MsgEmpty"> & {
};

/**
 * Describes the message agentassistproto.MsgEmpty.
 * Use `create(MsgEmptySchema)` to create a new message.
 */
export const MsgEmptySchema: GenMessage<MsgEmpty> = /*@__PURE__*/
  messageDesc(file_agentassist, 5);

/**
 * @generated from message agentassistproto.McpAskQuestionRequest
 */
export type McpAskQuestionRequest = Message<"agentassistproto.McpAskQuestionRequest"> & {
  /**
   * current project directory
   *
   * @generated from field: string ProjectDirectory = 1;
   */
  ProjectDirectory: string;

  /**
   * ai agent's question
   *
   * @generated from field: string Question = 2;
   */
  Question: string;

  /**
   * timeout in seconds, default is 600s
   *
   * @generated from field: int32 Timeout = 3;
   */
  Timeout: number;
};

/**
 * Describes the message agentassistproto.McpAskQuestionRequest.
 * Use `create(McpAskQuestionRequestSchema)` to create a new message.
 */
export const McpAskQuestionRequestSchema: GenMessage<McpAskQuestionRequest> = /*@__PURE__*/
  messageDesc(file_agentassist, 6);

/**
 * @generated from message agentassistproto.AskQuestionRequest
 */
export type AskQuestionRequest = Message<"agentassistproto.AskQuestionRequest"> & {
  /**
   * request id
   *
   * @generated from field: string ID = 1;
   */
  ID: string;

  /**
   * user token
   *
   * @generated from field: string UserToken = 2;
   */
  UserToken: string;

  /**
   * ai agent's question
   *
   * @generated from field: agentassistproto.McpAskQuestionRequest Request = 3;
   */
  Request?: McpAskQuestionRequest;
};

/**
 * Describes the message agentassistproto.AskQuestionRequest.
 * Use `create(AskQuestionRequestSchema)` to create a new message.
 */
export const AskQuestionRequestSchema: GenMessage<AskQuestionRequest> = /*@__PURE__*/
  messageDesc(file_agentassist, 7);

/**
 * @generated from message agentassistproto.AskQuestionResponse
 */
export type AskQuestionResponse = Message<"agentassistproto.AskQuestionResponse"> & {
  /**
   * request id
   *
   * @generated from field: string ID = 1;
   */
  ID: string;

  /**
   * @generated from field: bool IsError = 2;
   */
  IsError: boolean;

  /**
   * @generated from field: map<string, string> Meta = 3;
   */
  Meta: { [key: string]: string };

  /**
   * @generated from field: repeated agentassistproto.McpResultContent contents = 4;
   */
  contents: McpResultContent[];
};

/**
 * Describes the message agentassistproto.AskQuestionResponse.
 * Use `create(AskQuestionResponseSchema)` to create a new message.
 */
export const AskQuestionResponseSchema: GenMessage<AskQuestionResponse> = /*@__PURE__*/
  messageDesc(file_agentassist, 8);

/**
 * @generated from message agentassistproto.McpTaskFinishRequest
 */
export type McpTaskFinishRequest = Message<"agentassistproto.McpTaskFinishRequest"> & {
  /**
   * current project directory
   *
   * @generated from field: string ProjectDirectory = 1;
   */
  ProjectDirectory: string;

  /**
   * ai agent's summary
   *
   * @generated from field: string Summary = 2;
   */
  Summary: string;

  /**
   * timeout in seconds, default is 600s
   *
   * @generated from field: int32 Timeout = 3;
   */
  Timeout: number;
};

/**
 * Describes the message agentassistproto.McpTaskFinishRequest.
 * Use `create(McpTaskFinishRequestSchema)` to create a new message.
 */
export const McpTaskFinishRequestSchema: GenMessage<McpTaskFinishRequest> = /*@__PURE__*/
  messageDesc(file_agentassist, 9);

/**
 * @generated from message agentassistproto.TaskFinishRequest
 */
export type TaskFinishRequest = Message<"agentassistproto.TaskFinishRequest"> & {
  /**
   * request id
   *
   * @generated from field: string ID = 1;
   */
  ID: string;

  /**
   * user token
   *
   * @generated from field: string UserToken = 2;
   */
  UserToken: string;

  /**
   * ai agent's summary
   *
   * @generated from field: agentassistproto.McpTaskFinishRequest Request = 3;
   */
  Request?: McpTaskFinishRequest;
};

/**
 * Describes the message agentassistproto.TaskFinishRequest.
 * Use `create(TaskFinishRequestSchema)` to create a new message.
 */
export const TaskFinishRequestSchema: GenMessage<TaskFinishRequest> = /*@__PURE__*/
  messageDesc(file_agentassist, 10);

/**
 * @generated from message agentassistproto.TaskFinishResponse
 */
export type TaskFinishResponse = Message<"agentassistproto.TaskFinishResponse"> & {
  /**
   * request id
   *
   * @generated from field: string ID = 1;
   */
  ID: string;

  /**
   * @generated from field: bool IsError = 2;
   */
  IsError: boolean;

  /**
   * @generated from field: map<string, string> Meta = 3;
   */
  Meta: { [key: string]: string };

  /**
   * @generated from field: repeated agentassistproto.McpResultContent contents = 4;
   */
  contents: McpResultContent[];
};

/**
 * Describes the message agentassistproto.TaskFinishResponse.
 * Use `create(TaskFinishResponseSchema)` to create a new message.
 */
export const TaskFinishResponseSchema: GenMessage<TaskFinishResponse> = /*@__PURE__*/
  messageDesc(file_agentassist, 11);

/**
 * @generated from message agentassistproto.WebsocketMessage
 */
export type WebsocketMessage = Message<"agentassistproto.WebsocketMessage"> & {
  /**
   * WebsocketMessage cmd
   * AskQuestion: mcp ask_question
   * TaskFinish: mcp task_finish
   * AskQuestionReply: user ask_question reply
   * TaskFinishReply: user task_finish reply
   * UserLogin: user login, str param is user token
   * AskQuestionReplyNotification: notification of an AskQuestionReply
   * TaskFinishReplyNotification: notification of a TaskFinishReply
   *
   * @generated from field: string Cmd = 1;
   */
  Cmd: string;

  /**
   * ask question
   *
   * @generated from field: agentassistproto.AskQuestionRequest AskQuestionRequest = 2;
   */
  AskQuestionRequest?: AskQuestionRequest;

  /**
   * task finish
   *
   * @generated from field: agentassistproto.TaskFinishRequest TaskFinishRequest = 3;
   */
  TaskFinishRequest?: TaskFinishRequest;

  /**
   * ask question reply
   *
   * @generated from field: agentassistproto.AskQuestionResponse AskQuestionResponse = 4;
   */
  AskQuestionResponse?: AskQuestionResponse;

  /**
   * task finish reply
   *
   * @generated from field: agentassistproto.TaskFinishResponse TaskFinishResponse = 5;
   */
  TaskFinishResponse?: TaskFinishResponse;

  /**
   * str param
   *
   * @generated from field: string StrParam = 12;
   */
  StrParam: string;
};

/**
 * Describes the message agentassistproto.WebsocketMessage.
 * Use `create(WebsocketMessageSchema)` to create a new message.
 */
export const WebsocketMessageSchema: GenMessage<WebsocketMessage> = /*@__PURE__*/
  messageDesc(file_agentassist, 12);

/**
 * @generated from service agentassistproto.SrvAgentAssist
 */
export const SrvAgentAssist: GenService<{
  /**
   * @generated from rpc agentassistproto.SrvAgentAssist.AskQuestion
   */
  askQuestion: {
    methodKind: "unary";
    input: typeof AskQuestionRequestSchema;
    output: typeof AskQuestionResponseSchema;
  },
  /**
   * @generated from rpc agentassistproto.SrvAgentAssist.TaskFinish
   */
  taskFinish: {
    methodKind: "unary";
    input: typeof TaskFinishRequestSchema;
    output: typeof TaskFinishResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_agentassist, 0);

